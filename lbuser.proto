// 指定proto版本
syntax = "proto3";

// 指定golang包名
option go_package = "github.com/oldbai555/bgg/client/lbuser";

// 指定默认包名
package lbuser;

import "validate.proto";
import "lbconst.proto";

// 定义 lbuser 服务
service lbuser {
    // @desc: 登录
    rpc Login(LoginReq)returns(LoginRsp){}

    // @desc: 登出
    rpc Logout(LogoutReq)returns(LogoutRsp){}

    // @desc: 获取登录用户的信息
    rpc GetLoginUser(GetLoginUserReq)returns(GetLoginUserRsp){
    };

    // @cat:
    // @name:
    // @desc:
    // @error: 更新登陆的用户信息
    rpc UpdateLoginUserInfo (UpdateLoginUserInfoReq) returns (UpdateLoginUserInfoRsp) {
    };

    // @cat:
    // @name:
    // @desc:
    // @error:
    rpc AddUser (AddUserReq) returns (AddUserRsp) {
    };

    // @cat:
    // @name:
    // @desc:
    // @error:
    rpc GetUserList (GetUserListReq) returns (GetUserListRsp) {
    };

    // @cat:
    // @name:
    // @desc:
    // @error:
    rpc DelUser (DelUserReq) returns (DelUserRsp) {
    };

    // @cat:
    // @name:
    // @desc:
    // @error:
    rpc GetUser (GetUserReq) returns (GetUserRsp) {
    };

    // @cat:
    // @name:
    // @desc:
    // @error:
    rpc UpdateUserNameWithRole (UpdateUserNameWithRoleReq) returns (UpdateUserNameWithRoleRsp) {
    };

    // @cat:
    // @name:
    // @desc:
    // @error:
    rpc ResetPassword (ResetPasswordReq) returns (ResetPasswordRsp) {
    };

    // @cat: front
    // @name:
    // @desc:
    // @error:
	rpc GetFrontUser (GetFrontUserReq) returns (GetLoginUserRsp) {
	};
}

enum ErrCode {
    Nil = 0;
    // 30000 - 40000
    ErrUserNotFound = 30001;
    ErrPasswordInvalid = 30002;
    ErrUserExit = 30003;
}

message ModelUser{
    enum Role{
        RoleNil = 0;
        RoleAdmin = 1;
    }
    uint64 id = 1;
    int32  created_at = 2;
    int32  updated_at = 3;
    int32  deleted_at = 4;

    string username = 5;
    string password = 6;

    string avatar = 7;
    string nickname = 8;
    string email = 9;
    string github = 10;
    string desc = 11;

    uint32 role = 12;
}

message LoginReq{
    string username = 1 [(validate.rules).string = {min_len: 6, max_len: 12}];
    string password = 2 [(validate.rules).string = {min_len: 6, max_len: 20}];
}

message LoginRsp{
    string sid = 1;
}

message LogoutReq{
    string sid = 1;
}

message LogoutRsp{
}

message GetLoginUserReq{
}

message GetLoginUserRsp{
    string avatar = 1;
    string nickname = 2;
    string email = 3;
    string github = 4;
    string desc = 5;
}

message UpdateLoginUserInfoReq{
    ModelUser user = 1 [(validate.rules).message = {required:true}];
}

message UpdateLoginUserInfoRsp{}

message AddUserReq{
    ModelUser user = 1 [(validate.rules).message = {required:true}];
}

message AddUserRsp{}

message GetUserListReq{
    enum ListOption {
        ListOptionNil = 0;
        ListOptionLikeUsername = 1;
    }
    lbconst.ListOption list_option = 1[(validate.rules).message = {required:true}];
}

message GetUserListRsp{
    lbconst.Page page = 1;
    repeated ModelUser list = 2;
}

message DelUserReq{
    uint64 id = 1[(validate.rules).uint64 = {gt: 0}];
}

message DelUserRsp{}

message GetUserReq{
    uint64 id = 1[(validate.rules).uint64 = {gt: 0}];
}

message GetUserRsp{
    ModelUser user = 1;
}

message UpdateUserNameWithRoleReq{
    string username = 1;
    uint32 role = 2;
    uint64 id = 3[(validate.rules).uint64 = {gt: 0}];
}

message UpdateUserNameWithRoleRsp{}

message ResetPasswordReq{
    uint64 id = 1[(validate.rules).uint64 = {gt: 0}];
    string old_password = 2[(validate.rules).string = {min_len: 6,max_len:16}];
    string new_password = 3[(validate.rules).string = {min_len: 6,max_len:16}];
}

message ResetPasswordRsp{}

message GetFrontUserReq{}